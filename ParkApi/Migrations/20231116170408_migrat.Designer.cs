// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ParkApi.Data;

#nullable disable

namespace ParkApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231116170408_migrat")]
    partial class migrat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ParkApi.model.Favourites", b =>
                {
                    b.Property<int>("ParkId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("ParkApi.model.FeaturesList", b =>
                {
                    b.Property<int>("FeaturesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FeaturesListId"));

                    b.Property<bool?>("Entertainment")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Food")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Gym")
                        .HasColumnType("boolean");

                    b.Property<bool?>("PetsAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Shops")
                        .HasColumnType("boolean");

                    b.Property<bool?>("WiFi")
                        .HasColumnType("boolean");

                    b.HasKey("FeaturesListId");

                    b.ToTable("FeaturesList");
                });

            modelBuilder.Entity("ParkApi.model.LocationDetail", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Coodinates")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("LocationId");

                    b.ToTable("LocationDetail");
                });

            modelBuilder.Entity("ParkApi.model.Parks", b =>
                {
                    b.Property<int>("ParkId")
                        .HasColumnType("integer");

                    b.Property<int?>("FeaturesIDFeaturesListId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParkDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParkName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ParkId");

                    b.HasIndex("FeaturesIDFeaturesListId");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("ParkApi.model.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ParkApi.model.Parks", b =>
                {
                    b.HasOne("ParkApi.model.FeaturesList", "FeaturesID")
                        .WithMany()
                        .HasForeignKey("FeaturesIDFeaturesListId");

                    b.HasOne("ParkApi.model.LocationDetail", "LocationID")
                        .WithOne("Parks")
                        .HasForeignKey("ParkApi.model.Parks", "ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeaturesID");

                    b.Navigation("LocationID");
                });

            modelBuilder.Entity("ParkApi.model.LocationDetail", b =>
                {
                    b.Navigation("Parks")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
